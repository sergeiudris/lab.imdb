#!/bin/bash


dc(){
    docker-compose -f docker/dgraph.yml "$@"
}

up(){
    dc up -d --build
}

down(){
    dc down 
}

term(){
    sh c dc exec server bash -c "bash;"
}


fetch_movies(){
    wget "https://github.com/dgraph-io/tutorial/blob/master/resources/1million.rdf.gz?raw=true" -O 1million.rdf.gz -q 
    # -q quiet, no output
}

load_movies(){
    dc exec server bash -c "cd /opt/app; dgraph live -r 1million.rdf.gz --zero zero:5080 -c 1"
}

alter_schema(){
   curl localhost:8080/alter -XPOST -d '
        director.film: uid @reverse .
        genre: uid @reverse .
        initial_release_date: dateTime @index(year) .
        name: string @index(term) @lang .
    '  | python -m json.tool | less
}

load_imdb(){
    # dc exec server bash -c "cd /opt/app; dgraph live -r .data/imdb.rdf.gz/title.ratings.rdf.gz --zero zero:5080 -c 1"
    # dc exec server bash -c "cd /opt/app; dgraph live -r .data/imdb.rdf.gz/title.ratings.rdf.gz \
    # -r .data/imdb.rdf.gz/name.basics.rdf.gz \
    #  --zero zero:5080 -c 1"

    # dc exec server bash -c "cd /opt/app; dgraph live -r .data/imdb.rdf/name.basics.rdf --zero zero:5080 -c 1"
    
    dc exec server bash -c "cd /opt/app; dgraph live -b 1000 -c 10 \
     -r .data/imdb.rdf/all.rdf \
     --zero zero:5080 -c 1"

    # dc exec server bash -c "cd /opt/app; dgraph live -b 1000 -c 10 \
    #  -r .data/imdb.rdf.gz/all.tar.gz --zero zero:5080 -c 1"

}

load_imdb_test(){
       dc exec server bash -c "cd /opt/app; dgraph live -b 1000 -c 10 \
     -r ./bin/test.rdf \
     --zero zero:5080 -c 1"
}


"$@"